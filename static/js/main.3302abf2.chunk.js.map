{"version":3,"sources":["components/KeyItems.js","components/OpItems.js","components/FnItems.js","components/Keys.js","App.js","registerServiceWorker.js","index.js"],"names":["KeyItems","react_default","a","createElement","onClick","this","props","clickFn","value","n","className","Component","OpItems","FnItems","Keys","Values","btns","funs","_this","elements","map","element","components_KeyItems","clk","ops","op","components_OpItems","fns","fn","components_FnItems","do","id","sclassName","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","keys","e","refs","exp","target","preventDefault","i","length","charAt","x","substring","y","parseFloat","ref","type","components_Keys","toDo","bind","toInput","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.3302abf2.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport '../App.css';\n\nclass KeyItems extends Component{\n    render(){\n            return (\n                 <button onClick={this.props.clickFn} value={this.props.n} className='KeyItems btn'>{this.props.n}</button>\n            ) ;\n    }\n}\n\nexport default  KeyItems;","import React, {Component} from 'react';\nimport '../App.css';\n\nclass OpItems extends Component{\n    render(){\n            return (\n                <button onClick={this.props.clickFn} value={this.props.n} className='OpItems btn'>{this.props.n}</button> \n            ) ;\n    }\n}\n\nexport default  OpItems;","import React,{Component} from 'react';\nimport '../App.css';\nclass FnItems extends Component{  \n    render(){ \n        return (\n            <button onClick={this.props.clickFn} className='FnItems btn'  value={this.props.n} >{this.props.n}</button>\n       ) ;\n    }\n}\nexport default FnItems;","import React, {Component} from 'react';\nimport KeyItems from './KeyItems';\nimport OpItems from './OpItems';\nimport '../App.css';\nimport FnItems from './FnItems';\n\nclass Keys extends Component{\nrender(){\n    let Values ;\n    if(this.props.elements){\n    Values = this.props.elements.map((element) => {\n            return(\n                <KeyItems clickFn={this.props.clk} n={element}/>\n            )\n        })\n    }\n    let btns ;\n    if(this.props.ops){\n    btns = this.props.ops.map((op) => {\n            return(\n                <OpItems clickFn={this.props.clk} n={op}/>\n            )\n        })\n    }\n\n    let funs;\n    if(this.props.fns){\n        funs=this.props.fns.map((fn)=>{\n            return(\n                 <FnItems clickFn={this.props.do} n={fn}/>\n            )\n        })\n    }\n    \n    return( \n    <div className='Keys'>\n        {funs}\n        <div id='ops' className='con'> \n            {btns}\n        </div>\n        <div id='nums'sclassName='con'>\n            {Values}\n        </div>\n    </div>\n    );\n\n}\n} \n\nexport default  Keys;","import React, { Component } from 'react';\nimport './App.css';\nimport Keys from './components/Keys';\n\nclass App extends Component {\n\n  constructor(){\n    super();\n    this.state={\n      keys:[1,2,3,4,5,6,7,8,9,'.',0,'-'],\n      ops:['+','-','x','รท','%'],\n      fns:['C','Del','=']\n    }\n  }\n\n\n  toInput(e){\n    this.refs.exp.value = this.refs.exp.value + e.target.value;\n    e.preventDefault();\n  }\n\n  toDo(e){\n   let n = this.refs.exp.value;\n   if(e.target.value === '='){\n        for (let i = 0; i < n.length; i++) {\n            if(n.charAt(i)==='+'){\n              let x = n.substring(0,i);\n              let y = n.substring(i+1);\n              x = parseFloat(x,10);\n              y = parseFloat(y,10);\n              this.refs.exp.value = x+y;\n            }\n            if(n.charAt(i)==='-'){\n              let x = n.substring(0,i);\n              let y = n.substring(i+1);\n              x = parseFloat(x,10);\n              y = parseFloat(y,10);\n              this.refs.exp.value = x-y;\n            }\n            if(n.charAt(i)==='x'){\n              let x = n.substring(0,i);\n              let y = n.substring(i+1);\n              x = parseFloat(x,10);\n              y = parseFloat(y,10);\n              this.refs.exp.value = x*y;\n            }\n            if(n.charAt(i)==='รท'){\n              let x = n.substring(0,i);\n              let y = n.substring(i+1);\n              x = parseFloat(x,10);\n              y = parseFloat(y,10);\n              this.refs.exp.value = x/y;\n            }\n            if(n.charAt(i)==='%'){\n              let x = n.substring(0,i);\n              let y = n.substring(i+1);\n              x = parseFloat(x,10);\n              y = parseFloat(y,10);\n              this.refs.exp.value = (x/100)*y;\n            }\n       }   \n   }\n   if(e.target.value ==='C')\n      this.refs.exp.value=\" \";\n   if(e.target.value==='Del')\n      this.refs.exp.value=this.refs.exp.value.substring(0,n.length-1);\n    }\n  render() {\n    return (\n      <div className=\"App\">\n          <h1>React-Calculator</h1>\n          <div id='calculator'>\n            <input id='inp' ref='exp' type=\"text\"/>\n              <Keys do={this.toDo.bind(this)} clk={this.toInput.bind(this)} elements={this.state.keys} ops={this.state.ops} fns={this.state.fns}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}